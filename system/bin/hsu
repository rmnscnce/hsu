#!/system/bin/sh

# hsu - Hide su and Magisk binaries to prevent programs from reading the binaries using "ls"
# Copyright (C) 2020 xaedoplay @ XDA
# Licensed under the GNU General Public License v2.0

# Main module script


ADBPATH=/data/adb
MAGISKPATH=$ADBPATH/magisk
MMODPATH=$ADBPATH/modules/hsu
BBPATH=$ADBPATH/magisk/busybox
ENVPATH=$ADBPATH/.hsu
HSUFSPATH=$ENVPATH/hsu_fs
MODVER=PRERELEASE

if [ -f "$BBPATH" ]; then
	for ITEM in $($BBPATH --list | tail -n +3); do
		alias $ITEM="$BBPATH $ITEM"
	done
fi

. $MAGISKPATH/hsu_functions # INCLUDE FUNCTIONS

# Main user prompt
mainprompt () {
	menuheader "Main menu"
	echo -e "\nWhat would you like to do?"
	echo -e "\n"
	echo -e "(D)isable and hide Magisk and root"
	echo -e "(A)utohide root"
	echo -e "(C)lear up environment (recommended after performing a system update)"
	echo -e "(Q)uit"
	echo -e "\n"
	while true; do
		echo -e "\nPlease input your choice (case-insensitive, d|a|c|q):"
		read hprompt
		if [ "$hprompt" != "${hprompt#[Dd]}" ] ; then
			hideroot
		elif [ "$hprompt" != "${hprompt#[Aa]}" ] ; then
			autohide
		elif [ "$hprompt" != "${hprompt#[Cc]}" ] ; then
			clearenv
		elif [ "$hprompt" != "${hprompt#[Qq]}" ] ; then
			exit
		else
			echo -e "Invalid input $hprompt. Please input your choice"
		fi
	done
	echo -e "If you read this message, there's a bug within the function\nPlease file an issue on GitHub, or even better, try and fix the bug yourself and open a pull request on GitHub."
	exit 1
}

# First-time user prompt
oobeprompt () {
	menuheader "Welcome"
	echo -e "\nWelcome to hsu!\n\nThis module is useful to entirely disable and hide Magisk (and root), thus preventing any kinds of detection. Keep in mind this module will disable Magisk and root entirely while running, so MagiskHide is not needed (however it is still recommended to be enabled)"
	echo -e $LINEDIV
	echo -e "Would you like to setup hsu?\n"
	while true; do
		echo -e "\n(Y)es or (n)o (case-insensitive, y|n):"
		read hprompt
		if [ "$hprompt" != "${hprompt#[Yy]}" ] ; then
			initenv
		elif [ "$hprompt" != "${hprompt#[Nn]}" ] ; then
			echo -e "You cannot use hsu without setting it up. Exiting..."
			exit
		else
			echo -e "Invalid input $hprompt. Please input (y)es or (n)o"
		fi
	done
	echo -e "If you read this message, there's a bug within the function\nPlease file an issue on GitHub, or even better, try and fix the bug yourself and open a pull request on GitHub."
	exit 1
}

# Start the module

selinux_stat # Read initial SELinux status to "SESTAT"

if [ "$(readlink /proc/self/ns/mnt)" != "$(readlink /proc/1/ns/mnt)" ] ; then	# Rerun module if not running on global mount namespace mode
	exec su -M -c hsu $1							#
elif [ "$1" = "hide" ] ; then 	# Check if an argument is passed through
	hideroot		# 
elif [ "$1" = "help" ] ; then	#
	helpf			#
else
	oobecheck # Always use this to return to main menu
fi

exit 1 # This means something is broken, thus an error should be returned
